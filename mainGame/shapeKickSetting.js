const blocks = {
    T: {
        shape: [
            [0, 1, 0],
            [1, 1, 1],
            [0, 0, 0]
            ],
        color: '#e165e6', //fuchsia
        type : 'T'
    },
  
    O: {
        shape: [
            [1, 1],
            [1, 1]
        ],
        color: '#e6dd65',//yellow
        type : 'O'
    },

    J: {
        shape: [
            [1, 0, 0],
            [1, 1, 1],
            [0, 0, 0],
        ],
        color: '#6765e6',//blue
        type : 'J'
    },

    L: {
        shape: [
            [0, 0, 1],
            [1, 1, 1],
            [0, 0, 0],
        ],
        color: '#e69d65' ,//orange
        type : 'L'
    },

    S: {
        shape: [
            [0, 1, 1],
            [1, 1, 0],
            [0, 0, 0]
        ],
        color: '#74e665',//chartreuse
        type : 'S'
    },

    Z: {
        shape: [
            [1, 1, 0],
            [0, 1, 1],
            [0, 0, 0]
        ],
        color: '#e66565',//red
        type : 'Z'
    },

    I: {
        shape: [
            [0, 0, 0, 0],
            [1, 1, 1, 1],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ],
        color: "#8ce3e6",//cyan
        type : 'I'
    },

    ////////////////////////// 추가블럭들
    Q : {
      shape: [
          [1, 1, 0],
          [1, 1, 1],
          [0, 0, 0]
      ],
        color: 'DeepPink',
        type : 'Q'
    },
    X : {
      shape: [
          [1, 0, 1],
          [0, 1, 0],
          [1, 0, 1]
      ],
        color: 'FireBrick',
        type : 'X'
    },
    U : {
      shape: [
          [1, 0, 1],
          [1, 1, 1],
          [0, 0, 0]
      ],
        color: 'DarkBlue',
        type : 'U'
    },
    P : {
      shape: [
          [0, 1, 0],
          [1, 1, 1],
          [0, 1, 0]
      ],
        color: 'Aquamarine',
        type : 'P'
    },
    V : {
      shape: [
          [0, 0, 0],
          [1, 0, 1],
          [0, 1, 0],
      ],
        color: 'PaleGreen',
        type : 'V'
    },
    dot : {
      shape: [
          [1]
      ],
        color: 'Lavender',
        type : 'dot'
    },
    BigT :{
      shape: [
        [0, 0, 1, 1, 0, 0],
        [0, 0, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1]
      ],
      color: '#e165e6',
      type : 'bigT'
    },
    BigL :{
      shape: [
        [0, 0, 0, 0, 1, 1],
        [0, 0, 0, 0, 1, 1]
        [1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1]
      ],
      color: 'e69d65',
      type : 'bigL'
    }
  };
  

//====================================Kick==================================\

/*
// SRS+ 킥 테이블 (기본 + 확장 킥 포함)
const kickTable = {
  "0>1": [[0,0], [-1,0], [-1,1], [0,-2], [-1,-2], [1,0], [2,0], [0,1], [0,-1]],
  "1>0": [[0,0], [1,0], [1,-1], [0,2], [1,2], [-1,0], [-2,0], [0,1], [0,-1]],
  "1>2": [[0,0], [1,0], [1,-1], [0,2], [1,2], [-1,0], [-2,0], [0,1], [0,-1]],
  "2>1": [[0,0], [-1,0], [-1,1], [0,-2], [-1,-2], [1,0], [2,0], [0,1], [0,-1]],
  "2>3": [[0,0], [1,0], [1,1], [0,-2], [1,-2], [-1,0], [-2,0], [0,1], [0,-1]],
  "3>2": [[0,0], [-1,0], [-1,-1], [0,2], [-1,2], [1,0], [2,0], [0,1], [0,-1]],
  "3>0": [[0,0], [-1,0], [-1,-1], [0,2], [-1,2], [1,0], [2,0], [0,1], [0,-1]],
  "0>3": [[0,0], [1,0], [1,1], [0,-2], [1,-2], [-1,0], [-2,0], [0,1], [0,-1]]
};


  
  // I 미노용 킥 테이블 (별도 처리)
  const kickTableI = {
    "0>1": [[0,0], [-2,0], [1,0], [-2,-1], [1,2], [-1,0], [2,0], [0,-1], [0,1]],
    "1>0": [[0,0], [2,0], [-1,0], [2,1], [-1,-2], [1,0], [-2,0], [0,1], [0,-1]],
    "1>2": [[0,0], [-1,0], [2,0], [-1,2], [2,-1], [1,0], [-2,0], [0,1], [0,-1]],
    "2>1": [[0,0], [1,0], [-2,0], [1,-2], [-2,1], [-1,0], [2,0], [0,-1], [0,1]],
    "2>3": [[0,0], [2,0], [-1,0], [2,1], [-1,-2], [1,0], [-2,0], [0,1], [0,-1]],
    "3>2": [[0,0], [-2,0], [1,0], [-2,-1], [1,2], [-1,0], [2,0], [0,-1], [0,1]],
    "3>0": [[0,0], [1,0], [-2,0], [1,-2], [-2,1], [-1,0], [2,0], [0,1], [0,-1]],
    "0>3": [[0,0], [-1,0], [2,0], [-1,2], [2,-1], [1,0], [-2,0], [0,-1], [0,1]]
  };
  

  const kickTableT = {
    "0>1": [[0,0],[1,0],[-1,0],[0,-1],[0,1],[1,-1],[-1,-1],[2,0],[-2,0]],
    "1>2": [[0,0],[0,1],[0,-1],[1,0],[-1,0],[1,1],[-1,1],[0,2],[0,-2]],
    "2>3": [[0,0],[1,0],[-1,0],[0,-1],[0,1],[1,-1],[-1,-1],[2,0],[-2,0]],
    "3>0": [[0,0],[0,1],[0,-1],[1,0],[-1,0],[1,1],[-1,1],[0,2],[0,-2]],
    // 반대 방향
    "1>0": [[0,0],[-1,0],[1,0],[0,1],[0,-1],[-1,1],[1,1],[-2,0],[2,0]],
    "2>1": [[0,0],[0,-1],[0,1],[-1,0],[1,0],[-1,-1],[1,-1],[0,-2],[0,2]],
    "3>2": [[0,0],[-1,0],[1,0],[0,1],[0,-1],[-1,1],[1,1],[-2,0],[2,0]],
    "0>3": [[0,0],[0,-1],[0,1],[-1,0],[1,0],[-1,-1],[1,-1],[0,-2],[0,2]]
  };
  

*/

/*
0 : 기본 모양

1 : 오른쪽으로 90° 회전한 모양

2 : 180° 회전

3 : 왼쪽으로 90° 회전

*/

// JLSTZ, T 공용 SRS 킥 
const kickTable = {
  "0>1": [[0,0],[-1,0],[-1, 2],[-1,1],[0,-2],[-1,-2], [1, 1]], 
  "1>0": [[0,0],[1, 1], [1,0],[1,-1],[0,2],[1,2]],//[1, 1]
  "1>2": [[0,0],[1,0],[0, 1],[1,-1],[0,2],[1,2], [1, 1]], //[1, 1]
  "2>1": [[0,0],[-1,0],[-1,1],[0,-2],[-1,-2]],
  "2>3": [[0,0],[1,0],[1,1],[-1, 1],[0,-2],[1,-2]],
  "3>2": [[0,0],[-1, 1],[-1,0],[-1,-1],[0,2],[-1,2]],
  "3>0": [[0,0],[-1, 1], [0, 1],[-1, -1],[0,2],[-1,2]],
  "0>3": [[0,0],[1, 2],[1,0],[1,1],[0,-2],[1,-2]] //[0, 3]
};

// I 미노용 (SRS+)
const kickTableI = {
  "0>1": [[0,0],[-2,0],[1,0],[-2,-1],[1,2]],
  "1>0": [[0,0],[2,0],[-1,0],[2,1],[-1,-2]],
  "1>2": [[0,0],[-1,0],[2,0],[-1,2],[2,-1]],
  "2>1": [[0,0],[1,0],[-2,0],[1,-2],[-2,1]],
  "2>3": [[0,0],[2,0],[-1,0],[2,1],[-1,-2]],
  "3>2": [[0,0],[-2,0],[1,0],[-2,-1],[1,2]],
  "3>0": [[0,0],[1,0],[-2,0],[1,-2],[-2,1]],
  "0>3": [[0,0],[-1,0],[2,0],[-1,2],[2,-1]]
};

const kickTable180 = {
  "0>2": [[0,0], [1,0], [-1,0], [0,-1], [0,1]],
  "2>0": [[0,0], [1,0], [-1,0], [0,-1], [0,1]],
  "1>3": [[0,0], [0,1], [0,-1], [1,0], [-1,0]],
  "3>1": [[0,0], [0,1], [0,-1], [1,0], [-1,0]]
};


const kickTableI180 = {
  "0>2": [[0,0], [2,0], [-2,0], [0,-1], [0,1]],
  "2>0": [[0,0], [2,0], [-2,0], [0,-1], [0,1]],
  "1>3": [[0,0], [0,2], [0,-2], [1,0], [-1,0]],
  "3>1": [[0,0], [0,2], [0,-2], [1,0], [-1,0]]
};
